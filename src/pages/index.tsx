import { createProxySSGHelpers } from '@trpc/react-query/ssg';
import type { GetServerSidePropsContext } from "next";
import { type NextPage } from "next";
import { getSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import superjson from 'superjson';
import { createContextInner } from "../server/trpc/context";
import { appRouter } from "../server/trpc/router/_app";
import { trpc } from "../utils/trpc";

export async function getServerSideProps(
  context: GetServerSidePropsContext,
) {
  const session = await getSession({ ctx: context });

  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: await createContextInner({ session }),
    transformer: superjson,
  });

  await ssg.boards.getAll.prefetch();

  context.res.setHeader(
    'Cache-Control',
    'public, s-maxage=15, stale-while-revalidate=60'
  );

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
  };
}

const Home: NextPage = () => {
  const boardsQ = trpc.boards.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Boards - 3Board</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />

      </Head>
      <div className="flex flex-col items-center py-4">

        <h1 className="font-bold text-3xl mb-2">Welcome to 3Board</h1>

        <div className="flex gap-2 flex-col bg-gradient-to-b from-brownmain-300 to-brownmain-400 p-3 w-[300px] rounded-md shadow-md">

          {boardsQ.isLoading ? <div>Loading boards...</div> : null}

          {boardsQ.data?.length === 0 && <div>There are no boards</div>}

          {boardsQ.data?.map(x => <Link key={x.id} href={`/${x.name}`}>
            <div key={x.id} className="transition-all hover:underline hover:text-brownmain-600">
              <span className="font-bold">/{x.name}/</span>
              <span> - </span>
              <span>{x.description}</span>
            </div>
          </Link>
          )}

        </div>
      </div>

    </>
  );
};

export default Home;