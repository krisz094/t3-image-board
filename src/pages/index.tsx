import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {

  const boardsQ = trpc.boards.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Boards</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />

      </Head>
      <div className="flex flex-col items-center min-w-[100vw] min-h-[100vh] bg-gradient-to-b from-blue-100 to-blue-200 py-4">

        <h1 className="font-bold text-3xl mb-2">Boards</h1>

        <div className="flex gap-2 flex-col bg-gradient-to-b from-blue-300 to-blue-400 p-3 w-[300px] rounded-md shadow-md">

          {boardsQ.isLoading ? <div>Loading boards...</div> : null}

          {boardsQ.data?.length === 0 && <div>There are no boards</div>}

          {boardsQ.data?.map(x => <Link key={x.id} href={`/${x.name}`}>
            <div key={x.id} className="transition-all hover:underline hover:text-blue-600">
              <span className="font-bold">/{x.name}/</span>
              <span> - </span>
              <span>{x.description}</span>
            </div>
          </Link>
          )}

        </div>
      </div>

    </>
  );
};

export default Home;
/* 
const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}; */
